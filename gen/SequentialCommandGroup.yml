---

extra_includes:
- frc2/command/Command.h
- frc2/command/Subsystem.h
- src/helpers.h

attributes:
  invalid_index:
functions:
  SequentialCommandGroup_BeforeStarting:
    ignore: true
  SequentialCommandGroup_AndThen:
    ignore: true
classes:
  SequentialCommandGroup:
    shared_ptr: true
    force_type_casters:
    - std::span
    - std::function
    attributes:
      m_commands:
    methods:
      SequentialCommandGroup:
        overloads:
          std::vector<std::shared_ptr<Command>>&&:
          Types&&...:
            cpp_code: |
              [](py::args cmds) {
                return std::make_shared<SequentialCommandGroup_Trampoline>(std::move(pyargs2cmdList(cmds)));
              }
            param_override:
              commands:
                ignore: true
      AddCommands:
        overloads:
          std::vector<std::shared_ptr<Command>>&&:
          Types&&...:
            ignore: true
      Initialize:
      Execute:
      End:
      IsFinished:
      RunsWhenDisabled:
      GetInterruptionBehavior:
      InitSendable:
        virtual_xform: |
          [&](py::function fn) {
            auto builderHandle = py::cast(builder, py::return_value_policy::reference);
            fn(builderHandle);
          }

inline_code: |
  cls_SequentialCommandGroup
    .def("addCommands", [](SequentialCommandGroup * self, py::args cmds) {
      self->AddCommands(std::move(pyargs2cmdList(cmds)));
    })
  ;