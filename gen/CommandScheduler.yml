---

extra_includes:
- frc2/command/Command.h
- frc2/command/Subsystem.h
- wpi/sendable/SendableBuilder.h
- networktables/NTSendableBuilder.h
- src/helpers.h

classes:
  CommandScheduler:
    ignored_bases:
    - wpi::SendableHelper<CommandScheduler>
    methods:
      GetInstance:
        return_value_policy: reference
        no_release_gil: true
      SetPeriod:
      GetActiveButtonLoop:
      SetActiveButtonLoop:
      GetDefaultButtonLoop:
      ClearButtons:
      Schedule:
        overloads:
          frc2::CommandPtr&:
          frc2::Command*:
          std::span<Command * const>:
          std::initializer_list<Command *>:
            ignore: true
      Run:
      RegisterSubsystem:
        overloads:
          frc2::Subsystem*:
          std::initializer_list<Subsystem *>:
            ignore: true
          std::span<Subsystem * const>:
      UnregisterSubsystem:
        overloads:
          frc2::Subsystem*:
          std::initializer_list<Subsystem *>:
            ignore: true
          std::span<Subsystem * const>:
      SetDefaultCommand:
        overloads:
          frc2::Subsystem*, T&&:
            ignore: true
          frc2::Subsystem*, frc2::CommandPtr&&:
            cpp_code: |
              [](CommandScheduler *self, frc2::Subsystem* s, frc2::CommandPtr&& c) {
                return self->SetDefaultCommand(s, std::forward<frc2::CommandPtr>(c));
              }
      RemoveDefaultCommand:
      GetDefaultCommand:
      Cancel:
        overloads:
          frc2::Command*:
          frc2::CommandPtr&:
          std::span<Command * const>:
          std::initializer_list<Command *>:
            ignore: true
      CancelAll:
      IsScheduled:
        overloads:
          std::span<const Command * const> [const]:
          std::initializer_list<const Command *> [const]:
            ignore: true
          frc2::Command* [const]:
          frc2::CommandPtr& [const]:
      Requiring:
      Disable:
      Enable:
      OnCommandInitialize:
      OnCommandExecute:
      OnCommandInterrupt:
      OnCommandFinish:
      RequireUngrouped:
        overloads:
          frc2::Command*:
          std::span<const std::unique_ptr<Command>>:
          std::initializer_list<const Command *>:
            ignore: true
      InitSendable:
    inline_code: |
      .def("registerSubsystem", [](CommandScheduler * self, py::args args){
        auto vargs = pyargs2SubsystemList(args);
        self->RegisterSubsystem(vargs);
      })
      .def("unregisterSubsystem", [](CommandScheduler * self, py::args args){
        auto vargs = pyargs2SubsystemList(args);
        self->UnregisterSubsystem(vargs);
      })
