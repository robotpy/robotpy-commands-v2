---

extra_includes:
- frc2/command/Command.h
- frc2/command/Subsystem.h
- src/helpers.h
- src/SelectCommandKey.h

typealias:
- frc2::Command
- frc2::Subsystem

functions:
  None:
    rename: nothing
    subpackage: cmd
  RunOnce:
    overloads:
      std::function<void ()>, std::initializer_list<std::shared_ptr<Subsystem>>:
        ignore: true
      std::function<void ()>, std::span<std::shared_ptr<Subsystem>>:
        subpackage: cmd
  Run:
    overloads:
      std::function<void ()>, std::initializer_list<std::shared_ptr<Subsystem>>:
        ignore: true
      std::function<void ()>, std::span<std::shared_ptr<Subsystem>>:
        subpackage: cmd
  StartEnd:
    overloads:
      std::function<void ()>, std::function<void ()>, std::initializer_list<std::shared_ptr<Subsystem>>:
        ignore: true
      std::function<void ()>, std::function<void ()>, std::span<std::shared_ptr<Subsystem>>:
        subpackage: cmd
  RunEnd:
    overloads:
      std::function<void ()>, std::function<void ()>, std::initializer_list<std::shared_ptr<Subsystem>>:
        ignore: true
      std::function<void ()>, std::function<void ()>, std::span<std::shared_ptr<Subsystem>>:
        subpackage: cmd
  Print:
    subpackage: cmd
  Wait:
    subpackage: cmd
  WaitUntil:
    subpackage: cmd
  Either:
    subpackage: cmd
  Select:
    subpackage: cmd
    template_impls:
    - [SelectCommandKey]
  MakeVector:
    ignore: true
  Sequence:
    subpackage: cmd
  RepeatingSequence:
    subpackage: cmd
  Parallel:
    subpackage: cmd
  Race:
    subpackage: cmd
  Deadline:
    subpackage: cmd
inline_code: |
  pkg_cmd.def("sequence", [](py::args cmds) {
        return frc2::cmd::Sequence(pyargs2cmdList(cmds));
  });
  pkg_cmd.def("repeatingSequence", [](py::args cmds) {
        return frc2::cmd::RepeatingSequence(pyargs2cmdList(cmds));
  });
  pkg_cmd.def("parallel", [](py::args cmds) {
        return frc2::cmd::Parallel(pyargs2cmdList(cmds));
  });
  pkg_cmd.def("race", [](py::args cmds) {
        return frc2::cmd::Race(pyargs2cmdList(cmds));
  });